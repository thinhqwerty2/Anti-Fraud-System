[1;31m
Start test 1[0m
	[0;34m
4[0m[0;34m  .   ____          _            __ _ _
5[0m[0;34m /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
6[0m[0;34m( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
7[0m[0;34m \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
6[0m[0;34m  '  |____| .__|_| |_|_| |_\__, | / / / /
5[0m[0;34m =========|_|==============|___/=/_/_/_/
7[0m[0;34m :: Spring Boot ::                (v2.7.3)
[0m[0;34m
Ü[0m[0;34m2023-03-02 14:28:35.955  INFO 15564 --- [    Test worker] antifraud.AntiFraudApplication           : Starting AntiFraudApplication using Java 17.0.6 on Wuyern with PID 15564 (started by thinh in D:\Internship\Anti-Fraud System\Anti-Fraud System\task)
¥[0m[0;34m2023-03-02 14:28:35.960  INFO 15564 --- [    Test worker] antifraud.AntiFraudApplication           : No active profile set, falling back to 1 default profile: "default"
¨[0m[0;34m2023-03-02 14:28:38.390  INFO 15564 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
∆[0m[0;34m2023-03-02 14:28:38.505  INFO 15564 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 92 ms. Found 1 JPA repository interfaces.
û[0m[0;34m2023-03-02 14:28:39.818  INFO 15564 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 28852 (http)
ä[0m[0;34m2023-03-02 14:28:39.838  INFO 15564 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
†[0m[0;34m2023-03-02 14:28:39.839  INFO 15564 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
£[0m[0;34m2023-03-02 14:28:40.080  INFO 15564 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
∞[0m[0;34m2023-03-02 14:28:40.080  INFO 15564 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4016 ms
ã[0m[0;34m2023-03-02 14:28:40.367  INFO 15564 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
ê[0m[0;34m2023-03-02 14:28:40.894  INFO 15564 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
¬[0m[0;34m2023-03-02 14:28:40.921  INFO 15564 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2'. Database available at 'jdbc:h2:file:../service_db'
™[0m[0;34m2023-03-02 14:28:41.277  INFO 15564 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
£[0m[0;34m2023-03-02 14:28:41.400  INFO 15564 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
©[0m[0;34m2023-03-02 14:28:41.788  INFO 15564 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
™[0m[0;34m2023-03-02 14:28:42.072  INFO 15564 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Ô[0m[0;34mHibernate: create table user_details (id bigint generated by default as identity, active boolean, name varchar(255) not null, password varchar(255) not null, role varchar(255), username varchar(255) not null, primary key (id))
‰[0m[0;34m2023-03-02 14:28:43.266  INFO 15564 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
¥[0m[0;34m2023-03-02 14:28:43.277  INFO 15564 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
®[0m[0;34m2023-03-02 14:28:44.298  WARN 15564 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
≠[0m[0;34m2023-03-02 14:28:44.647  INFO 15564 --- [    Test worker] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
¶[0m[0;34m2023-03-02 14:28:45.231  INFO 15564 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
È[0m[0;34m2023-03-02 14:28:45.366  INFO 15564 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2f2a5064, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43a72f0f, org.springframework.security.web.context.SecurityContextPersistenceFilter@c194c4e, org.springframework.security.web.header.HeaderWriterFilter@6d4df1d2, org.springframework.security.web.authentication.logout.LogoutFilter@47d0195b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@222dc36c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3ba50851, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c399d4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6fe33512, org.springframework.security.web.session.SessionManagementFilter@1ebb36df, org.springframework.security.web.access.ExceptionTranslationFilter@2c8c42c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@938e54a]
≠[0m[0;34m2023-03-02 14:28:46.012  INFO 15564 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 28852 (http) with context path ''
∏[0m[0;34m2023-03-02 14:28:46.055  INFO 15564 --- [    Test worker] antifraud.AntiFraudApplication           : Started AntiFraudApplication in 10.873 seconds (JVM running for 12.675)
[0m[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
[0m[0;34mrequest: '{
$[0m[0;34m   "name": "John Doe 1",
'[0m[0;34m   "password": "oa3VvqnLxW"
[0m[0;34m}'
s[0m[0;34mExpectations: 'In case of wrong data in request, endpoint must respond with BAD REQUEST  status (400).'
[0m[0;34m-----
¶[0;34m2023-03-02 14:28:46.700  INFO 15564 --- [io-28852-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
ô[0m[0;34m2023-03-02 14:28:46.701  INFO 15564 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
ë[0m[0;34m2023-03-02 14:28:46.704  INFO 15564 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 2 ms
Î[0m[0;34m2023-03-02 14:28:47.107  WARN 15564 --- [io-28852-exec-1] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<antifraud.entity.UserDetailsDTO> antifraud.controller.ApiController.createUser(antifraud.entity.UserDetails): [Field error in object 'userDetails' on field 'username': rejected value [null]; codes [NotNull.userDetails.username,NotNull.username,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userDetails.username,username]; arguments []; default message [username]]; default message [must not be null]] ]
[0m[1;31m
Start test 2[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
[0m[0;34mrequest: '{
$[0m[0;34m   "name": "John Doe 2",
%[0m[0;34m   "username": "johndoe1"
[0m[0;34m}'
s[0m[0;34mExpectations: 'In case of wrong data in request, endpoint must respond with BAD REQUEST  status (400).'
[0m[0;34m-----
Á[0;34m2023-03-02 14:28:47.216  WARN 15564 --- [io-28852-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<antifraud.entity.UserDetailsDTO> antifraud.controller.ApiController.createUser(antifraud.entity.UserDetails): [Field error in object 'userDetails' on field 'password': rejected value [null]; codes [NotNull.userDetails.password,NotNull.password,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userDetails.password,password]; arguments []; default message [password]]; default message [must not be null]] ]
[0m[1;31m
Start test 3[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
[0m[0;34mrequest: '{
$[0m[0;34m   "name": "John Doe 1",
&[0m[0;34m   "username": "johndoe1",
)[0m[0;34m   "password": "oMoa3VvqnLxW"
[0m[0;34m}'
m[0m[0;34mExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
[0m[0;34m-----
N[0;34mHibernate: select count(*) as col_0_0_ from user_details userdetail0_
}[0m[0;34mHibernate: insert into user_details (id, active, name, password, role, username) values (default, ?, ?, ?, ?, ?)
[0m[1;31m
Start test 4[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/list'
¢[0m[0;34mExpectations: 'Endpoint must respond with HTTP OK status (200) and body with array of objects representing the users sorted by ID in ascending order.'
[0m[0;34m-----
Æ[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
C[0m[0;34mHibernate: SELECT * FROM User_Details ORDER BY id ASC 
[0m[1;31m
Start test 5[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
[0m[0;34mrequest: '{
$[0m[0;34m   "name": "John Doe 1",
&[0m[0;34m   "username": "johndoe1",
)[0m[0;34m   "password": "oMoa3VvqnLxW"
[0m[0;34m}'
m[0m[0;34mExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
[0m[0;34m-----
N[0;34mHibernate: select count(*) as col_0_0_ from user_details userdetail0_
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
}[0m[0;34mHibernate: insert into user_details (id, active, name, password, role, username) values (default, ?, ?, ?, ?, ?)
[0m[1;31m
Start test 6[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/list'
¢[0m[0;34mExpectations: 'Endpoint must respond with HTTP OK status (200) and body with array of objects representing the users sorted by ID in ascending order.'
[0m[0;34m-----
Æ[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
C[0m[0;34mHibernate: SELECT * FROM User_Details ORDER BY id ASC 
[0m[1;31m
Start test 7[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/list'
L[0m[0;34mExpectations: 'A user with incorrect credentials is not allowed'
[0m[0;34m-----
Æ[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 8[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/list'
L[0m[0;34mExpectations: 'A user with incorrect credentials is not allowed'
[0m[0;34m-----
Æ[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 9[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
F[0m[0;34mExpectations: 'Merchant after registration must be LOCKED'
[0m[0;34m-----
Æ[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 10[0m
[0;34mTest case
+[0m[0;34mTesting api: '/api/auth/access'
<[0m[0;34mExpectations: 'A user johndoe1 must be UNLOCKED'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
k[0m[0;34mHibernate: update user_details set active=?, name=?, password=?, role=?, username=? where id=?
[0m[1;31m
Start test 11[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
<[0m[0;34mExpectations: 'A user johndoe1 must be UNLOCKED'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 12[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
![0m[0;34mrequest: 'amount = 1'
N[0m[0;34mExpectations: 'Result validating of Transaction must be 'ALLOWED''
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 13[0m
Ü[0;34m2023-03-02 14:28:48.646  INFO 15564 --- [       Thread-5] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
ß[0m[0;34m2023-03-02 14:28:48.648  INFO 15564 --- [       Thread-5] o.a.c.c.C.[Tomcat].[localhost].[/]       : Destroying Spring FrameworkServlet 'dispatcherServlet'
[0m[0;34m2023-03-02 14:28:48.650  WARN 15564 --- [       Thread-5] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [MVStore background writer D:/Internship/Anti-Fraud System/Anti-Fraud System/service_db.mv.db] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
B[0m[0;34m java.base@17.0.6/java.lang.Object.wait(Native Method)
V[0m[0;34m app//org.h2.mvstore.MVStore$BackgroundWriterThread.run(MVStore.java:3768)
¨[0m[0;34m2023-03-02 14:28:48.652  WARN 15564 --- [       Thread-5] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
J[0m[0;34m java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
d[0m[0;34m java.base@17.0.6/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
î[0m[0;34m java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
ã[0m[0;34m java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
ä[0m[0;34m java.base@17.0.6/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
k[0m[0;34m java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
m[0m[0;34m java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
m[0m[0;34m java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
C[0m[0;34m java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
§[0m[0;34m2023-03-02 14:28:48.653  WARN 15564 --- [       Thread-5] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [H2-serialization] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
J[0m[0;34m java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
_[0m[0;34m java.base@17.0.6/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
å[0m[0;34m java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
f[0m[0;34m java.base@17.0.6/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
d[0m[0;34m java.base@17.0.6/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
è[0m[0;34m java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
i[0m[0;34m java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
k[0m[0;34m java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
m[0m[0;34m java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
m[0m[0;34m java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
C[0m[0;34m java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
õ[0m[0;34m2023-03-02 14:28:48.656  WARN 15564 --- [       Thread-5] o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [H2-save] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
J[0m[0;34m java.base@17.0.6/jdk.internal.misc.Unsafe.park(Native Method)
_[0m[0;34m java.base@17.0.6/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
å[0m[0;34m java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
f[0m[0;34m java.base@17.0.6/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
d[0m[0;34m java.base@17.0.6/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
è[0m[0;34m java.base@17.0.6/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
i[0m[0;34m java.base@17.0.6/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
k[0m[0;34m java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
m[0m[0;34m java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
m[0m[0;34m java.base@17.0.6/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
C[0m[0;34m java.base@17.0.6/java.lang.Thread.run(Thread.java:833)
∞[0m[0;34m2023-03-02 14:28:48.669  INFO 15564 --- [       Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
ï[0m[0;34m2023-03-02 14:28:48.676  INFO 15564 --- [       Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
ì[0m[0;34m2023-03-02 14:28:48.761  INFO 15564 --- [       Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
	[0;34m
4[0m[0;34m  .   ____          _            __ _ _
5[0m[0;34m /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
6[0m[0;34m( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
7[0m[0;34m \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
6[0m[0;34m  '  |____| .__|_| |_|_| |_\__, | / / / /
5[0m[0;34m =========|_|==============|___/=/_/_/_/
7[0m[0;34m :: Spring Boot ::                (v2.7.3)
[0m[0;34m
Ü[0m[0;34m2023-03-02 14:28:59.039  INFO 15564 --- [    Test worker] antifraud.AntiFraudApplication           : Starting AntiFraudApplication using Java 17.0.6 on Wuyern with PID 15564 (started by thinh in D:\Internship\Anti-Fraud System\Anti-Fraud System\task)
¥[0m[0;34m2023-03-02 14:28:59.040  INFO 15564 --- [    Test worker] antifraud.AntiFraudApplication           : No active profile set, falling back to 1 default profile: "default"
¨[0m[0;34m2023-03-02 14:28:59.733  INFO 15564 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
∆[0m[0;34m2023-03-02 14:28:59.750  INFO 15564 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15 ms. Found 1 JPA repository interfaces.
û[0m[0;34m2023-03-02 14:29:00.015  INFO 15564 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 28852 (http)
ä[0m[0;34m2023-03-02 14:29:00.016  INFO 15564 --- [    Test worker] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
†[0m[0;34m2023-03-02 14:29:00.017  INFO 15564 --- [    Test worker] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
£[0m[0;34m2023-03-02 14:29:00.191  INFO 15564 --- [    Test worker] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
∞[0m[0;34m2023-03-02 14:29:00.193  INFO 15564 --- [    Test worker] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1148 ms
ã[0m[0;34m2023-03-02 14:29:00.358  INFO 15564 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
ê[0m[0;34m2023-03-02 14:29:00.409  INFO 15564 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
¬[0m[0;34m2023-03-02 14:29:00.410  INFO 15564 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2'. Database available at 'jdbc:h2:file:../service_db'
™[0m[0;34m2023-03-02 14:29:00.548  INFO 15564 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
™[0m[0;34m2023-03-02 14:29:00.563  INFO 15564 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
‰[0m[0;34m2023-03-02 14:29:00.653  INFO 15564 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
¥[0m[0;34m2023-03-02 14:29:00.653  INFO 15564 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
®[0m[0;34m2023-03-02 14:29:00.827  WARN 15564 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
≠[0m[0;34m2023-03-02 14:29:00.908  INFO 15564 --- [    Test worker] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page: class path resource [static/index.html]
¶[0m[0;34m2023-03-02 14:29:01.142  INFO 15564 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
Ì[0m[0;34m2023-03-02 14:29:01.167  INFO 15564 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4ac7927a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@25bfc558, org.springframework.security.web.context.SecurityContextPersistenceFilter@2527765a, org.springframework.security.web.header.HeaderWriterFilter@41030c21, org.springframework.security.web.authentication.logout.LogoutFilter@297da2c3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6237927a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ea4b4b2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@371fdf43, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3d837af7, org.springframework.security.web.session.SessionManagementFilter@3c5797c6, org.springframework.security.web.access.ExceptionTranslationFilter@1b3a1e42, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3c48bbf3]
≠[0m[0;34m2023-03-02 14:29:01.468  INFO 15564 --- [    Test worker] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 28852 (http) with context path ''
∑[0m[0;34m2023-03-02 14:29:01.497  INFO 15564 --- [    Test worker] antifraud.AntiFraudApplication           : Started AntiFraudApplication in 2.513 seconds (JVM running for 28.117)
[0m[1;31m
Start test 14[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/list'
9[0m[0;34mExpectations: 'After restart user must exist'
[0m[0;34m-----
¶[0;34m2023-03-02 14:29:01.538  INFO 15564 --- [io-28852-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
ô[0m[0;34m2023-03-02 14:29:01.539  INFO 15564 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
ë[0m[0;34m2023-03-02 14:29:01.543  INFO 15564 --- [io-28852-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 4 ms
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
C[0m[0;34mHibernate: SELECT * FROM User_Details ORDER BY id ASC 
[0m[1;31m
Start test 15[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
[0m[0;34mrequest: '{
$[0m[0;34m   "name": "John Doe 1",
&[0m[0;34m   "username": "johndoe1",
)[0m[0;34m   "password": "oMoa3VvqnLxW"
[0m[0;34m}'
Ü[0m[0;34mExpectations: 'In case of an attempt to register an existing user, endpoint must respond with HTTP CONFLICT status (409).'
[0m[0;34m-----
N[0;34mHibernate: select count(*) as col_0_0_ from user_details userdetail0_
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 16[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
[0m[0;34mrequest: '{
$[0m[0;34m   "name": "John Doe 2",
&[0m[0;34m   "username": "johndoe2",
)[0m[0;34m   "password": "oMoa5VvqnLxW"
[0m[0;34m}'
m[0m[0;34mExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
[0m[0;34m-----
N[0;34mHibernate: select count(*) as col_0_0_ from user_details userdetail0_
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
}[0m[0;34mHibernate: insert into user_details (id, active, name, password, role, username) values (default, ?, ?, ?, ?, ?)
[0m[1;31m
Start test 17[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/list'
¢[0m[0;34mExpectations: 'Endpoint must respond with HTTP OK status (200) and body with array of objects representing the users sorted by ID in ascending order.'
[0m[0;34m-----
Æ[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
C[0m[0;34mHibernate: SELECT * FROM User_Details ORDER BY id ASC 
[0m[1;31m
Start test 18[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
#[0m[0;34mrequest: 'amount = 199'
N[0m[0;34mExpectations: 'Result validating of Transaction must be 'ALLOWED''
[0m[0;34m-----
Æ[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 19[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
#[0m[0;34mrequest: 'amount = 200'
N[0m[0;34mExpectations: 'Result validating of Transaction must be 'ALLOWED''
[0m[0;34m-----
Æ[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 20[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
#[0m[0;34mrequest: 'amount = 201'
X[0m[0;34mExpectations: 'Result validating of Transaction must be 'MANUAL_PROCESSING''
[0m[0;34m-----
Æ[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 21[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
$[0m[0;34mrequest: 'amount = 1499'
X[0m[0;34mExpectations: 'Result validating of Transaction must be 'MANUAL_PROCESSING''
[0m[0;34m-----
Æ[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 22[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
$[0m[0;34mrequest: 'amount = 1500'
X[0m[0;34mExpectations: 'Result validating of Transaction must be 'MANUAL_PROCESSING''
[0m[0;34m-----
Æ[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 23[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
$[0m[0;34mrequest: 'amount = 1501'
Q[0m[0;34mExpectations: 'Result validating of Transaction must be 'PROHIBITED''
[0m[0;34m-----
Æ[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 24[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
$[0m[0;34mrequest: 'amount = 2000'
Q[0m[0;34mExpectations: 'Result validating of Transaction must be 'PROHIBITED''
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 25[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
"[0m[0;34mrequest: 'amount = -1'
A[0m[0;34mExpectations: 'Response status must be 'Bad request''
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 26[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
![0m[0;34mrequest: 'amount = 0'
A[0m[0;34mExpectations: 'Response status must be 'Bad request''
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 27[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
$[0m[0;34mrequest: 'amount = null'
A[0m[0;34mExpectations: 'Response status must be 'Bad request''
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 28[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
"[0m[0;34mrequest: 'amount = ""'
A[0m[0;34mExpectations: 'Response status must be 'Bad request''
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 29[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
#[0m[0;34mrequest: 'amount = " "'
A[0m[0;34mExpectations: 'Response status must be 'Bad request''
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 30[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
![0m[0;34mrequest: 'empty body'
A[0m[0;34mExpectations: 'Response status must be 'Bad request''
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 31[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
.[0m[0;34mrequest: '/api/auth/user/somebody'
][0m[0;34mExpectations: 'If a user is not found, respond with HTTP Not Found status (404).'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 32[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
.[0m[0;34mrequest: '/api/auth/user/johndoe1'
c[0m[0;34mExpectations: 'The endpoint must delete the user and respond with HTTP OK status (200)'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
O[0m[0;34mHibernate: delete from user_details where upper(username)=upper(?)
[0m[1;31m
Start test 33[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/list'
:[0m[0;34mExpectations: 'User 'johndoe1' must be delete'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
C[0m[0;34mHibernate: SELECT * FROM User_Details ORDER BY id ASC 
[0m[1;31m
Start test 34[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/role'
o[0m[0;34mExpectations: 'If a user is not found, endpoint must respond with the HTTP Not Found status (404).'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 35[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/role'
q[0m[0;34mExpectations: 'If a role is not found, endpoint must respond with the HTTP Bad Request status (400).'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 36[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/role'
u[0m[0;34mExpectations: 'If a role is ADMINISTRATOR, endpoint must respond with the HTTP Bad Request status (400).'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 37[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/role'
a[0m[0;34mExpectations: 'If a role successfully changed, respond with the HTTP OK status (200)'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
k[0m[0;34mHibernate: update user_details set active=?, name=?, password=?, role=?, username=? where id=?
[0m[1;31m
Start test 38[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/role'
|[0m[0;34mExpectations: 'If a role already assigned to a user, endpoint must respond with the HTTP Conflict status (409).'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 39[0m
[0;34mTest case
+[0m[0;34mTesting api: '/api/auth/access'
<[0m[0;34mExpectations: 'A user johndoe2 must be UNLOCKED'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
k[0m[0;34mHibernate: update user_details set active=?, name=?, password=?, role=?, username=? where id=?
[0m[1;31m
Start test 40[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/list'
O[0m[0;34mExpectations: 'Role for user 'johndoe2' must be changed to SUPPORT'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
C[0m[0;34mHibernate: SELECT * FROM User_Details ORDER BY id ASC 
[0m[1;31m
Start test 41[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
M[0m[0;34mExpectations: 'Role MERCHANT must be removed from user johndoe2!'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 42[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
[0m[0;34mrequest: '{
$[0m[0;34m   "name": "John Doe 3",
&[0m[0;34m   "username": "johndoe3",
)[0m[0;34m   "password": "oMoa6VvqnLxW"
[0m[0;34m}'
m[0m[0;34mExpectations: 'If user successfully added, endpoint must respond with HTTP CREATED status (201) '
[0m[0;34m-----
R[0m[0;34mHibernate: select count(*) as col_0_0_ from user_details userdetail0_
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
}[0m[0;34mHibernate: insert into user_details (id, active, name, password, role, username) values (default, ?, ?, ?, ?, ?)
[0m[1;31m
Start test 43[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
K[0m[0;34mExpectations: 'MERCHANT user after registration must be LOCKED'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 44[0m
[0;34mTest case
+[0m[0;34mTesting api: '/api/auth/access'
<[0m[0;34mExpectations: 'A user johndoe3 must be UNLOCKED'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
k[0m[0;34mHibernate: update user_details set active=?, name=?, password=?, role=?, username=? where id=?
[0m[1;31m
Start test 45[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
<[0m[0;34mExpectations: 'A user johndoe3 must be UNLOCKED'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 46[0m
[0;34mTest case
+[0m[0;34mTesting api: '/api/auth/access'
:[0m[0;34mExpectations: 'A user johndoe3 must be LOCKED'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
k[0m[0;34mHibernate: update user_details set active=?, name=?, password=?, role=?, username=? where id=?
[0m[1;31m
Start test 47[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
:[0m[0;34mExpectations: 'A user johndoe3 must be LOCKED'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 48[0m
[0;34mTest case
+[0m[0;34mTesting api: '/api/auth/access'
<[0m[0;34mExpectations: 'A user johndoe3 must be UNLOCKED'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
k[0m[0;34mHibernate: update user_details set active=?, name=?, password=?, role=?, username=? where id=?
[0m[1;31m
Start test 49[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
m[0m[0;34mExpectations: 'A user with role ADMINISTRATOR must not have access to /api/antifraud/transaction'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 50[0m
[0;34mTest case
6[0m[0;34mTesting api: '/api/antifraud/transaction/'
n[0m[0;34mExpectations: 'A user with role ADMINISTRATOR must not have access to /api/antifraud/transaction/'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 51[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
g[0m[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/antifraud/transaction'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 52[0m
[0;34mTest case
6[0m[0;34mTesting api: '/api/antifraud/transaction/'
h[0m[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/antifraud/transaction/'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 53[0m
[0;34mTest case
5[0m[0;34mTesting api: '/api/antifraud/transaction'
i[0m[0;34mExpectations: 'A user with role ANONYMOUS must not have access to /api/antifraud/transaction'
[0m[0;34m-----
[0m[1;31m
Start test 54[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
d[0m[0;34mExpectations: 'A user with role ANONYMOUS must not have access to DELETE /api/auth/user'
[0m[0;34m-----
[0m[1;31m
Start test 55[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
b[0m[0;34mExpectations: 'A user with role SUPPORT must not have access to DELETE /api/auth/user'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 56[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
c[0m[0;34mExpectations: 'A user with role MERCHANT must not have access to DELETE /api/auth/user'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 57[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/user'
c[0m[0;34mExpectations: 'A user with role MERCHANT must not have access to DELETE /api/auth/user'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 58[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/list'
][0m[0;34mExpectations: 'A user with role ANONYMOUS must not have access to /api/auth/list'
[0m[0;34m-----
[0m[1;31m
Start test 59[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/list'
\[0m[0;34mExpectations: 'A user with role MERCHANT must not have access to /api/auth/list'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 60[0m
[0;34mTest case
+[0m[0;34mTesting api: '/api/auth/access'
^[0m[0;34mExpectations: 'A user with role MERCHANT must not have access to /api/auth/access'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 61[0m
[0;34mTest case
+[0m[0;34mTesting api: '/api/auth/access'
][0m[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/auth/access'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 62[0m
[0;34mTest case
,[0m[0;34mTesting api: '/api/auth/access/'
_[0m[0;34mExpectations: 'A user with role MERCHANT must not have access to /api/auth/access/'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 63[0m
[0;34mTest case
,[0m[0;34mTesting api: '/api/auth/access/'
^[0m[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/auth/access/'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 64[0m
[0;34mTest case
+[0m[0;34mTesting api: '/api/auth/access'
_[0m[0;34mExpectations: 'A user with role ANONYMOUS must not have access to /api/auth/access'
[0m[0;34m-----
[0m[1;31m
Start test 65[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/role'
[[0m[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/auth/role'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 66[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/role'
\[0m[0;34mExpectations: 'A user with role MERCHANT must not have access to /api/auth/role'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 67[0m
[0;34mTest case
)[0m[0;34mTesting api: '/api/auth/role'
][0m[0;34mExpectations: 'A user with role ANONYMOUS must not have access to /api/auth/role'
[0m[0;34m-----
[0m[1;31m
Start test 68[0m
[0;34mTest case
*[0m[0;34mTesting api: '/api/auth/role/'
\[0m[0;34mExpectations: 'A user with role SUPPORT must not have access to /api/auth/role/'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m[1;31m
Start test 69[0m
[0;34mTest case
*[0m[0;34mTesting api: '/api/auth/role/'
][0m[0;34mExpectations: 'A user with role MERCHANT must not have access to /api/auth/role/'
[0m[0;34m-----
≤[0m[0;34mHibernate: select userdetail0_.id as id1_0_, userdetail0_.active as active2_0_, userdetail0_.name as name3_0_, userdetail0_.password as password4_0_, userdetail0_.role as role5_0_, userdetail0_.username as username6_0_ from user_details userdetail0_ where upper(userdetail0_.username)=upper(?)
[0m